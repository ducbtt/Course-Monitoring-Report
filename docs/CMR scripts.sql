-- Create CMR schema
CREATE SCHEMA `cmr` ;

-- Create CMR root user
CREATE USER 'cmr'@'localhost' IDENTIFIED BY '123456';

-- Grant all privilleges to user 'cmr'
GRANT ALL PRIVILEGES ON cmr.* To 'cmr'@'localhost' IDENTIFIED BY '123456';
FLUSH PRIVILEGES;

-- Create tables
CREATE TABLE `cmr`.`CMR_ROLE` (
  `ROLE_ID` INT NOT NULL AUTO_INCREMENT,
  `NAME` VARCHAR(50) NOT NULL,
  `DESCRIPTION` VARCHAR(100) NULL,
  PRIMARY KEY (`ROLE_ID`),
  UNIQUE INDEX `ROLE_ID_UNIQUE` (`ROLE_ID` ASC),
  UNIQUE INDEX `NAME_UNIQUE` (`NAME` ASC));

CREATE TABLE `cmr`.`CMR_USER` (
  `USR_ID` INT NOT NULL AUTO_INCREMENT,
  `USR_NAME` VARCHAR(50) NOT NULL,
  `USR_FNAME` VARCHAR(100) NOT NULL,
  `USR_LNAME` VARCHAR(100) NOT NULL,
  `DOB` DATE NOT NULL,
  `EMAIL` VARCHAR(250) NOT NULL,
  `USR_PSW` VARCHAR(250) NOT NULL,
  `CREATED_DATE` DATETIME NOT NULL,
  `MODIFIED_DATE` DATETIME NULL,
  `TELEPHONE` VARCHAR(20) NULL,
  `ACTIVE` VARCHAR(1) NOT NULL DEFAULT 'Y',
  PRIMARY KEY (`USR_ID`),
  UNIQUE INDEX `USR_ID_UNIQUE` (`USR_ID` ASC),
  UNIQUE INDEX `USR_NAME_UNIQUE` (`USR_NAME` ASC),
  UNIQUE INDEX `EMAIL_UNIQUE` (`EMAIL` ASC));

CREATE TABLE `cmr`.`FACULTY` (
  `FACULTY_ID` INT NOT NULL AUTO_INCREMENT,
  `NAME` VARCHAR(45) NOT NULL,
  `DESCRIPTION` VARCHAR(45) NOT NULL,
  `PVC_ID` INT NOT NULL,
  `DLT_ID` INT NOT NULL,
  PRIMARY KEY (`FACULTY_ID`),
  UNIQUE INDEX `FACULTY_ID_UNIQUE` (`FACULTY_ID` ASC),
  UNIQUE INDEX `NAME_UNIQUE` (`NAME` ASC),
  INDEX `FK_PVC_idx` (`PVC_ID` ASC),
  INDEX `FK_DLT_idx` (`DLT_ID` ASC),
  CONSTRAINT `FK_PVC`
    FOREIGN KEY (`PVC_ID`)
    REFERENCES `cmr`.`CMR_USER` (`USR_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_DLT`
    FOREIGN KEY (`DLT_ID`)
    REFERENCES `cmr`.`CMR_USER` (`USR_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);
    
CREATE TABLE `cmr`.`ROLES_FOR_USER` (
  `ROLE_ID` INT NOT NULL,
  `USR_ID` INT NOT NULL,
  PRIMARY KEY (`ROLE_ID`, `USR_ID`),
  INDEX `FK_USER_idx` (`USR_ID` ASC),
  CONSTRAINT `FK_ROLE`
    FOREIGN KEY (`ROLE_ID`)
    REFERENCES `cmr`.`CMR_ROLE` (`ROLE_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_USER`
    FOREIGN KEY (`USR_ID`)
    REFERENCES `cmr`.`CMR_USER` (`USR_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE TABLE `cmr`.`USERS_FOR_FACULTY` (
  `USR_ID` INT NOT NULL,
  `FACULTY_ID` INT NOT NULL,
  PRIMARY KEY (`USR_ID`, `FACULTY_ID`),
  INDEX `FK_FACULTY_idx` (`FACULTY_ID` ASC),
  CONSTRAINT `FK_USER_FACULTY`
    FOREIGN KEY (`USR_ID`)
    REFERENCES `cmr`.`CMR_USER` (`USR_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_FACULTY_USER`
    FOREIGN KEY (`FACULTY_ID`)
    REFERENCES `cmr`.`FACULTY` (`FACULTY_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE TABLE `cmr`.`COURSE` (
  `CRS_CODE` VARCHAR(20) NOT NULL,
  `CRS_NAME` VARCHAR(150) NOT NULL,
  `CRS_DETAILS` VARCHAR(400) NOT NULL,
  `START_DATE` DATE NOT NULL,
  `END_DATE` DATE NOT NULL,
  `CREDITS` INT NULL,
  `PRE_REQUISITE` VARCHAR(20) NULL,
  `CRS_CL` INT NULL,
  `CRS_CM` INT NULL,
  PRIMARY KEY (`CRS_CODE`),
  UNIQUE INDEX `CRS_CODE_UNIQUE` (`CRS_CODE` ASC),
  UNIQUE INDEX `CRS_NAME_UNIQUE` (`CRS_NAME` ASC),
  INDEX `FK_CRS_CL_idx` (`CRS_CL` ASC),
  INDEX `FK_CRS_CM_idx` (`CRS_CM` ASC),
  CONSTRAINT `FK_CRS_CL`
    FOREIGN KEY (`CRS_CL`)
    REFERENCES `cmr`.`CMR_USER` (`USR_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_CRS_CM`
    FOREIGN KEY (`CRS_CM`)
    REFERENCES `cmr`.`CMR_USER` (`USR_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE TABLE `cmr`.`COURSES_FOR_FACULTY` (
  `CRS_CODE` VARCHAR(20) NOT NULL,
  `FACULTY_ID` INT NOT NULL,
  PRIMARY KEY (`CRS_CODE`, `FACULTY_ID`),
  INDEX `FK_COURSE_FACULTY_idx` (`FACULTY_ID` ASC),
  CONSTRAINT `FK_FACULTY_COURSE`
    FOREIGN KEY (`CRS_CODE`)
    REFERENCES `cmr`.`COURSE` (`CRS_CODE`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_COURSE_FACULTY`
    FOREIGN KEY (`FACULTY_ID`)
    REFERENCES `cmr`.`FACULTY` (`FACULTY_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE TABLE `cmr`.`COURSES_FOR_STUDENT` (
  `CRS_CODE` VARCHAR(20) NOT NULL,
  `USR_ID` INT NOT NULL,
  `NO_ATTENDED` INT NULL,
  `MRK_PRACTICE` DOUBLE NULL,
  `MRK_THEORY` DOUBLE NULL,
  `MRK_FINAL` DOUBLE NULL,
  `MRK_EXTRA` DOUBLE NULL,
  PRIMARY KEY (`CRS_CODE`, `USR_ID`),
  INDEX `FK_CRS_STD_idx` (`USR_ID` ASC),
  CONSTRAINT `FK_STD_CRS`
    FOREIGN KEY (`CRS_CODE`)
    REFERENCES `cmr`.`COURSE` (`CRS_CODE`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_CRS_STD`
    FOREIGN KEY (`USR_ID`)
    REFERENCES `cmr`.`CMR_USER` (`USR_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE TABLE `cmr`.`COURSES_FOR_TEACHER` (
  `CRS_CODE` VARCHAR(20) NOT NULL,
  `USR_ID` INT NOT NULL,
  PRIMARY KEY (`CRS_CODE`, `USR_ID`),
  INDEX `FK_CRS_TEACHER_idx` (`USR_ID` ASC),
  CONSTRAINT `FK_TEACHER_CRS`
    FOREIGN KEY (`CRS_CODE`)
    REFERENCES `cmr`.`COURSE` (`CRS_CODE`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_CRS_TEACHER`
    FOREIGN KEY (`USR_ID`)
    REFERENCES `cmr`.`CMR_USER` (`USR_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

CREATE TABLE `cmr`.`CMR_STATUS` (
  `STATUS_ID` INT NOT NULL AUTO_INCREMENT,
  `STATUS_NAME` VARCHAR(50) NOT NULL,
  `STATUS_DESC` VARCHAR(100) NULL,
  PRIMARY KEY (`STATUS_ID`),
  UNIQUE INDEX `STATUS_ID_UNIQUE` (`STATUS_ID` ASC),
  UNIQUE INDEX `STATUS_NAME_UNIQUE` (`STATUS_NAME` ASC));

CREATE TABLE `cmr`.`CMR` (
  `CMR_ID` INT NOT NULL AUTO_INCREMENT,
  `CRS_CODE` VARCHAR(20) NOT NULL,
  `NO_STD_GREEN` INT NULL,
  `CRS_SUBMIT_DATE` DATETIME NULL,
  `CMR_NOTE` VARCHAR(400) NULL,
  `ALL_CREDITED` VARCHAR(1) NOT NULL DEFAULT 'Y',
  `CMR_STATUS` INT NULL,
  `CREATED_DATE` DATETIME NULL,
  `MODIFIED_DATE` DATETIME NULL,
  `CREATED_BY` INT NULL,
  `FB_NO_EXCELLENT` INT NULL,
  `FB_NO_VERY_GOOD` INT NULL,
  `FB_NO_GOOD` INT NULL,
  `FB_NO_ENOUGH` INT NULL,
  `FB_NO_POOR` INT NULL,
  `FB_NO_VERY_POOR` INT NULL,
  PRIMARY KEY (`CMR_ID`),
  UNIQUE INDEX `CMR_ID_UNIQUE` (`CMR_ID` ASC),
  INDEX `FK_CMR_CRS_CODE_idx` (`CRS_CODE` ASC),
  INDEX `FK_CMR_STATUS_idx` (`CMR_STATUS` ASC),
  INDEX `FK_CREATED_BY_idx` (`CREATED_BY` ASC),
  CONSTRAINT `FK_CMR_CRS_CODE`
    FOREIGN KEY (`CRS_CODE`)
    REFERENCES `cmr`.`COURSE` (`CRS_CODE`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_CMR_STATUS`
    FOREIGN KEY (`CMR_STATUS`)
    REFERENCES `cmr`.`CMR_STATUS` (`STATUS_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_CREATED_BY`
    FOREIGN KEY (`CREATED_BY`)
    REFERENCES `cmr`.`CMR_USER` (`USR_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


CREATE TABLE `cmr`.`CMR_HISTORY` (
  `HIST_ID` INT NOT NULL AUTO_INCREMENT,
  `CMR_ID` INT NOT NULL,
  `ACTION_TYPE` VARCHAR(50) NOT NULL,
  `MODIFIED_BY` INT NOT NULL,
  `CREATED_AT` DATETIME NOT NULL,
  `HIST_CONTENT` VARCHAR(400) NULL,
  PRIMARY KEY (`HIST_ID`),
  UNIQUE INDEX `HIST_ID_UNIQUE` (`HIST_ID` ASC),
  INDEX `FK_CMR_ID_idx` (`CMR_ID` ASC),
  INDEX `FK_MODIFIED_BY_idx` (`MODIFIED_BY` ASC),
  CONSTRAINT `FK_CMR_ID`
    FOREIGN KEY (`CMR_ID`)
    REFERENCES `cmr`.`CMR` (`CMR_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_MODIFIED_BY`
    FOREIGN KEY (`MODIFIED_BY`)
    REFERENCES `cmr`.`CMR_USER` (`USR_ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);

INSERT INTO `cmr`.`CMR_ROLE` (`ROLE_ID`, `NAME`, `DESCRIPTION`) VALUES ('1', 'CL', 'Course Leader');
INSERT INTO `cmr`.`CMR_ROLE` (`ROLE_ID`, `NAME`, `DESCRIPTION`) VALUES ('2', 'CM', 'Course Moderator');
INSERT INTO `cmr`.`CMR_ROLE` (`ROLE_ID`, `NAME`, `DESCRIPTION`) VALUES ('3', 'PVC', 'Pro-Vice Chancellor');
INSERT INTO `cmr`.`CMR_ROLE` (`ROLE_ID`, `NAME`, `DESCRIPTION`) VALUES ('4', 'DLT', 'Director of Learning and Quality');
INSERT INTO `cmr`.`CMR_ROLE` (`ROLE_ID`, `NAME`, `DESCRIPTION`) VALUES ('5', 'ADMIN', 'Administrator');
INSERT INTO `cmr`.`CMR_ROLE` (`ROLE_ID`, `NAME`, `DESCRIPTION`) VALUES ('6', 'GUEST', 'Guest account');
INSERT INTO `cmr`.`CMR_ROLE` (`ROLE_ID`, `NAME`, `DESCRIPTION`) VALUES ('7', 'STD', 'Student');
INSERT INTO `cmr`.`CMR_ROLE` (`ROLE_ID`, `NAME`, `DESCRIPTION`) VALUES ('8', 'TEACH', 'Teacher');

INSERT INTO `cmr`.`CMR_STATUS` (`STATUS_ID`, `STATUS_NAME`, `STATUS_DESC`) VALUES ('1', 'NEW', 'Created new by CL');
INSERT INTO `cmr`.`CMR_STATUS` (`STATUS_ID`, `STATUS_NAME`, `STATUS_DESC`) VALUES ('4', 'COMPLETED', 'Commented by DTL');
INSERT INTO `cmr`.`CMR_STATUS` (`STATUS_ID`, `STATUS_NAME`, `STATUS_DESC`) VALUES ('2', 'PENDING_CM_APPROVE', 'Pending for CM to approve');
INSERT INTO `cmr`.`CMR_STATUS` (`STATUS_ID`, `STATUS_NAME`, `STATUS_DESC`) VALUES ('3', 'PENDING_DTL_RESPONSE', 'Pending for DTL response');

-- email/pass: t@gmail.com/123
INSERT INTO `cmr`.`CMR_USER` (`USR_ID`, `USR_NAME`, `USR_FNAME`, `USR_LNAME`, `DOB`, `EMAIL`, `USR_PSW`, `CREATED_DATE`, `MODIFIED_DATE`, `TELEPHONE`, `ACTIVE`) VALUES ('1', 't@gmail.com', 'Truong', 'Le', '1984-03-05', 't@gmail.com', '202cb962ac59075b964b07152d234b70', '2016-03-03', '2016-03-03', '123456789', 'Y');



